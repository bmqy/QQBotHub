﻿<#@ template debug="true" language="C#" hostspecific="True"#>  
<#@ import namespace="System.Reflection" #>
<#@ import namespace="System.Linq" #>
<#@ Import Namespace="System.Collections.Generic" #>
<#@ include file="MultipleOutputHelper.ttinclude"#> 
<# var manager = Manager.Create(Host, GenerationEnvironment); #>

<# manager.StartHeader(); #>
// Code generated by a template
// Project: KnifeHub
// https://github.com/yiyungent/KnifeHub
// Author: yiyun <yiyungent@gmail.com>
// LastUpadteTime: <#Write(DateTime.Now.ToString("yyyy-MM-dd hh:mm:ss"));#>

using DataAnalysisPlugin.Domain;
using DataAnalysisPlugin.Repositories.EFCore.Core;
using DataAnalysisPlugin.Repositories.EFCore.Interface;
<# manager.EndBlock(); #>
<#
	// 当前 Template.tt 所在的模板路径　　
    // Host.Template 是当前文本模板 Template.tt 的路径
    var currentPath = Path.GetDirectoryName(Host.TemplateFile);
	string projectPath = currentPath.Replace("\\Repositories\\EFCore\\Auto\\Implement", "");
	// 实体文件所在路径
	string modelFile = Path.Combine(projectPath, @"bin\Debug\net6.0\DataAnalysisPlugin.dll");
	// 读取
	byte[] fileData = File.ReadAllBytes(modelFile);
	Assembly assembly = Assembly.Load(fileData);
	IEnumerable<Type> entityTypes = assembly.GetTypes().Where(m=>!m.IsAbstract && m.IsClass && m.BaseType.FullName == "BaseEntity");
	foreach(Type type in entityTypes)
	{
		string entityName = type.Name.Replace("Entity", "");
		string fileName = entityName + "Repository.cs";
#>
<# manager.StartNewFile(fileName); #>

namespace Services.Implement
{
    public partial class <#Write(entityName);#>Service : BaseService<<#Write(entityName);#>>, I<#Write(entityName);#>Service
    {
        private readonly I<#Write(entityName);#>Repository _repository;
        public <#Write(entityName);#>Service(I<#Write(entityName);#>Repository repository) : base(repository)
        {
            this._repository = repository;
        }
    }
}
<# manager.EndBlock(); #>
<#
	}
#>
<# manager.StartFooter(); #>
<# manager.EndBlock(); #>
<# manager.Process(true); #>